.. index:: config.php

.. _configuration:

Configuration
=============

All configurable data is placed in :file:`config.php`. If this file does not
exist something went wrong during :ref:`installation`. This file only needs
to contain the parameters you want to change from their corresponding default
values.

If a directive is missing from your file, you can just add another line within
the file. This file is for over-writing the defaults; if you wish to use the
default value there's no need to add a directive.

You should assume that any configuration directives that were generated by the
installation routine of Wolf CMS are *required* to be there or have no default
value for some reason.

.. warning::

    :term:`Mac` users should note that if you are on a version before
    :term:`Mac OS X`, PHP does not seem to like :term:`Mac` end of lines
    character (``\r``). So ensure you choose the option that allows to use
    the \*nix end of line character (``\n``) in your text editor before
    saving a modified :file:`config.php`.

Basic settings
--------------

.. config:option:: define('DB_DSN', ..)

    :type: string
    :default: ``generated``

    Contains the complete connection string required for Wolf CMS to connect to it's
    database. This string is generated based on the selections you made during the
    installation phase.

    .. seealso:: :ref:`faq1_40`
    
.. config:option:: define('DB_USER', ..)

    :type: string
    :default: ``generated``

    The username required to connect to the database. This string is generated based on
    the selections you made during the installation phase.

.. config:option:: define('DB_PASS', ..)

    :type: string
    :default: ``generated``

    The username required to connect to the database. This string is generated based on
    the selections you made during the installation phase.
    
.. config:option:: define('TABLE_PREFIX', ..)

    :type: string
    :default: ``generated``

    The prefix that should be used when creating and referencing database tables. This
    string is generated based on the selections you made during the installation phase.


Server connectivity settings
----------------------------

.. config:option:: define('URL_PUBLIC', ..)

    :type: string
    :default: ``generated``

    The full http:// :term:`URL` to your Wolf CMS installation. This values is used througout
    the software and it's plugins to reference various :term:`URL`s. Only change this value
    if you are absolutely sure what you're doing.
    
.. config:option:: define('USE_MOD_REWRITE', ..)

    :type: boolean
    :default: false

    Change this setting to enable the use of mod_rewrite. When set to ``true``, Wolf CMS tries
    to remove the "?" in the :term:`URL`. For this to success, a correctly configured set of
    rewrite rules will have to be configured.
    
    Additionally, to enable mod_rewrite, you must also change the name of :file:`_.htaccess` in
    your root directory to :file:`.htaccess`.
    
.. config:option:: define('URL_SUFFIX', ..)

    :type: string
    :default: ``.html``

    This option allows you to add a default suffix to your page :term:`URL`s to, for example,
    simulate static pages.


Generic settings
----------------

.. config:option:: define('ADMIN_DIR', ..)

    :type: string
    :default: ``admin``

    The name of the :term:`HTTP` path, also known as a virtual directory, that your site's
    administration section lives behind.


.. config:option:: define('DEFAULT_TIMEZONE', ..)

    :type: string
    :default: ``generated``

    Sets in which timezone your installation lives.
    
    For more information on the available timezones, see http://php.net/timezones

.. config:option:: define('USE_POORMANSCRON', ..)

    :type: boolean
    :default: false

    Whether or not to use a so-called :term:`web bug` to run :term:`CRON` runs when users visit
    your site. If your site does not get any hits, the poorman's cron run will never take place.

.. config:option:: define('POORMANSCRON_INTERVAL', ..)

    :type: integer
    :default: 3600 (60 minutes)

    The minimum amount of time in seconds between two :term:`CRON` runs when using the poorman's
    cron option.

.. config:option:: define('COOKIE_LIFE', ..)

    :type: integer
    :default: 1800 (30 minutes)

    The amount of time in seconds that a logged in session remains valid.

.. config:option:: define('ALLOW_LOGIN_WITH_EMAIL', ..)

    :type: boolean
    :default: false

    Whether or not previously registerd users can login using their registered email address.

.. config:option:: define('CHECK_UPDATES', ..)

    :type: boolean
    :default: true

    Whether or not Wolf CMS will check if there are updates for itself or any of its plugins.

.. config:option:: define('CHECK_TIMEOUT', ..)

    :type: integer
    :default: 3

    The number of seconds before the check for updates times out in case of problems.


Security
--------

.. config:option:: define('USE_HTTPS', ..)

    :type: boolean
    :default: false

    Whether or not to use :term:`HTTPS` for the administration section of your website. Before
    enabling this, please make sure you have a working :term:`HTTP`+:term:`SSL` installation.
    
.. config:option:: define('COOKIE_HTTP_ONLY', ..)

    :type: boolean
    :default: false

    Whether or not to use a so-called :term:`HttpOnly`[#f1] authentication cookie instead of a
    unprotected one. This *requests* browsers to make the cookie only available through HTTP, so
    not javascript for example. There is no guarantee the browser honors the request, but
    :term:`OWASP` recommends using it. Defaults to false for backwards compatibility.
    
    .. note:: This option will default to *true* in future releases.

.. config:option:: define('DELAY_ON_INVALID_LOGIN', ..)

    :type: boolean
    :default: true

    Whether or not Wolf CMS should temporarily block login attempts to an account in case invalid
    login attempts occurred.

.. config:option:: define('DELAY_ONCE_EVERY', ..)

    :type: integer
    :default: 30

    The amount of time in seconds that Wolf CMS should block login attempts to an account for after
    invalid login attempts occurred.

.. config:option:: define('DELAY_FIRST_AFTER', ..)

    :type: integer
    :default: 3

    The number of invalid login attempts to an account that are permitted before Wolf CMS starts to
    (temporarily) block further login attempts.

.. config:option:: define('SECURE_TOKEN_EXPIRY', ..)

    :type: integer
    :default: 900 (15 minutes)

    The amount of time in seconds before a security token, otherwise known as an :term:`CSRF token`,
    is no longer deemed valid. If a user tries to undertake an action, like saving a page, after
    the token has expired, the system will display an ``Invalid CSRF token..`` message.
    
    Simply re-attemting the same action will allow the user to continue.
    
    .. warning:: The :term:`CSRF token` is considered a very important feature to help protect against
                 hackers stealing a user's session information and abusing that account.
                 
                 We **strongly** advise not setting this value too high.


Debug & Development
-------------------

.. warning::

    These settings might have huge effect on performance or security.

.. config:option:: define('DEBUG', ..)

    :type: boolean
    :default: false

    Defines whether or not Wolf CMS should produce error messages for debugging issues.

.. [#f1]

    See https://www.owasp.org/index.php/HttpOnly for more details.
